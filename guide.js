// Generated by CoffeeScript 1.3.3
(function() {
  (function( $ ) { ;

  var Accent, log;

  Accent = function(e, o) {
    return this.init(e, o);
  };

  Accent.prototype = {
    Constructor: Accent,
    template: "				<div id='guidejs-top' class='guidejs-row guidejs-shade'></div>				<div id='guidejs-left' class='guidejs-shade'></div>				<div id='guidejs-content'>					<div class='guidejs-border'></div>				</div>				<div id='guidejs-right' class='guidejs-shade'></div>				<div id='guidejs-bottom' class='guidejs-row guidejs-shade'></div>				",
    css: "<style>			#guidejs-top,			#guidejs-left,			#guidejs-content,			#guidejs-right,			#guidejs-bottom {				position: fixed;				top: 0px;				display: block;			}			.guidejs-row {				width:100%;			}			.guidejs-shade			{				background: rgba(0, 0, 0, .7);				/* ;				filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,startColorstr='#4cffffff', endColorstr='#4cffffff'); */ /* IE */			}			#guidejs #guidejs-middle {				font-size:0px;			}			/*#guidejs-left,			#guidejs-right,			#guidejs-content {				display: inline-block;				height: 100%;				min-width: 10px;			}*/			/* inside border trick */			#guidejs-content {				overflow:hidden;			}			#guidejs-content .guidejs-border {				display: block;				height: 100%;				width: 100%;				box-shadow: 0px 0px 0px 15px rgba(0, 0, 0, .7);				border-radius: 5px;			}		</style>",
    init: function(element, options) {
      var _this = this;
      console.log("init", this, element);
      $('head').append(this.css);
      $('body').append(this.template);
      this.conf = $.extend({}, {
        padding: 0,
        corner: 5,
        prevent_click: true,
        prevent_highlight_click: false
      }, options);
      console.log(this.conf, options);
      this.$target = $(element);
      this.$el = $('#guidejs-top, #guidejs-left, #guidejs-content, #guidejs-right, #guidejs-bottom');
      this.top = $('#guidejs-top');
      this.bottom = $('#guidejs-bottom');
      this.right = $('#guidejs-right');
      this.content = $('#guidejs-content');
      this.left = $('#guidejs-left');
      $(window).on('resize', function() {
        return _this.render.apply(_this);
      });
      $(window).on('scroll', function() {
        return _this.render.apply(_this);
      });
      return setTimeout(function() {
        return _this.render.apply(_this);
      }, 0);
    },
    render: function() {
      var bottom, camera, content, dx, dy, left, mid, right, target, top;
      target = {
        top: this.$target.offset().top - this.conf.padding,
        left: this.$target.offset().left - this.conf.padding,
        width: this.$target.outerWidth() + this.conf.padding * 2,
        height: this.$target.outerHeight() + this.conf.padding * 2
      };
      camera = {
        top: $(window).scrollTop(),
        left: 0,
        width: $(window).width(),
        height: $(window).height()
      };
      console.log('rendering', target, camera);
      dy = target.top - camera.top;
      top = {
        top: 0,
        height: Math.max(0, dy)
      };
      mid = Math.max(0, Math.min(target.height, target.height + dy));
      bottom = {
        top: mid + top.height,
        height: camera.height - mid
      };
      this.top.css(top);
      this.bottom.css(bottom);
      dx = target.left - camera.left;
      left = {
        top: top.height,
        left: 0,
        height: mid,
        width: target.left
      };
      content = Math.max(0, Math.min(target.width, target.width + dx));
      right = {
        top: top.height,
        left: left.width + content,
        height: mid,
        width: camera.width - (left.width + content)
      };
      this.left.css(left);
      return this.right.css(right);
    },
    show: function() {
      return console.log("sjhow");
    },
    hide: function() {
      return console.log("hide");
    }
  };

  $.fn.accent = function(param) {
    return this.each(function() {
      if (!$(this).data('accent')) {
        return $(this).data('accent', new Accent(this, param));
      } else if (typeof param === 'string') {
        return $(this).data('accent')[param]();
      }
    });
  };

  })(window.jQuery);


  log = console.log;

  $("#logo").accent({
    padding: 0,
    corner: 10,
    prevent_click: false,
    prevent_highlight_click: false
  });

}).call(this);
